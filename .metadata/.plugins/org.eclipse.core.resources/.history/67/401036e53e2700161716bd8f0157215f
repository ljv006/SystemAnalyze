import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayDeque;
import java.util.Queue;

import javax.imageio.IIOException;
//客户端
public class Client{
	//主机IP
	
	public static String ip = "127.0.0.1";
	//主机端口
	public static Queue<User> qq = new ArrayDeque<User>();
	public static int Transfer_port = 8888;
	public static int Receive_port = 10023;
	public static int Transfer_port2 = 8889;
	public static void main(String[] args) {
		login.main(args);
		//ClientTransfer ct = new ClientTransfer();
		//ClientReceive cr = new ClientReceive();
		//ct.start();
		//cr.start();
	}
	//先给服务器端发一个命令请求，在确认login命令后，那边等待接收user
	public static void login(User user) throws IOException{
		ObjectOutputStream os = null;
		Socket socket = new Socket(ip, Transfer_port);
		Socket socket2 = new Socket(ip, Transfer_port2);
		PrintStream ps = new PrintStream(socket.getOutputStream());
		ps.println(Command.Login);
		os = new ObjectOutputStream(socket2.getOutputStream());
		os.writeObject(user); 
        os.flush();
        new Thread(new ClientThread(socket)).start();
	}
	public static void register(User user) throws IOException{
		ObjectOutputStream os = null;
		Socket socket = new Socket(ip, Transfer_port);
		Socket socket2 = new Socket(ip, Transfer_port2);
		PrintStream ps = new PrintStream(socket.getOutputStream());
		ps.println(Command.Register);
		os = new ObjectOutputStream(socket2.getOutputStream());
		os.writeObject(user); 
        os.flush();
        new Thread(new ClientThread(socket)).start();
	}
	public void registerCourse() {
		
	}
}